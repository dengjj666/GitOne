一：
    初始化一个GIt仓库，使用 git init 命令
    添加文件到Git仓库，分两步:
    1.使用命令 git add <file>， 注意：可以反复多次使用，添加多个文件
    2.使用命令 gitcommit -m <message>, 完成

二：
    要随时掌握工作区的状态，使用 git ststus 命令
    如果 git status 告诉你有文件被修改过，用 git diff 命令查看修改内容
    
三：
    HEAD指向当前版本，git reset --hard commit_id 回退版本
    用 git log 查看提交历史  git log --pretty=oneline
    用 git reflog 查看命令历史
    用 cat 查看文本内容

四：
    Git 管理的是修改，而不是文本

五：
    Git checkout -- file 撤销本次修改,回退到最近一次 git add 或者 git commit 时的状态
    场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
    场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

六：
    小提示：先手动删除文件，然后使用git rm <file>和git add<file>效果是一样的。
    git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。

七：
    使用 git remote add origin git@server-name:path/repo-name.git 关联一个远程仓库
    关联后，使用 git push -u origin master 第一次推送 master 分支的所用内容到远程仓库，此后，只需要使用 git pust origin master

八：
    查看分支： git branch
    创建分支： git branch <name>
    切换分支： git checkout <name>
    创建 + 切换分支： git checkout -b <name>
    合并某分支到当前分支： git merge <dev>
    删除分支： git branch -d <name>

九：
    用 git log --graph 命令可以查看分支合并图。